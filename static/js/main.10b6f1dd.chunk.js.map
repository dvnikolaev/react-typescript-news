{"version":3,"sources":["store/reducers/authReducer.ts","store/reducers/postsReducer.ts","store/reducers/index.ts","store/actions/auth/types.ts","store/actions/posts/types.ts","store/index.ts","components/app-navbar/app-navbar-list.tsx","store/actions/auth/auth.ts","components/app-auth/app-auth-errror.tsx","components/app-auth/app-auth-body.tsx","components/app-auth/app-auth-signin.tsx","components/app-auth/app-auth.tsx","components/app-navbar/app-navbar.tsx","models/IPost.ts","components/posts-add-news/posts-add-news-body.tsx","store/actions/posts/posts.ts","components/posts-add-news/posts-add-news.tsx","components/posts-list/posts-list-item-action.tsx","components/posts-list/posts-list-item.tsx","components/posts-list/posts-list-not-accepted.tsx","components/posts-list/posts-list.tsx","components/posts-search/posts-search.tsx","routes/Posts.tsx","routes/Index.tsx","components/app/App.tsx","index.tsx"],"names":["INITIAL_STATE","isAuth","user","id","username","password","isAdmin","usersList","errorSignIn","isShow","text","posts","author_id","title","description","date","isAccept","combineReducers","auth","state","action","type","payload","map","item","filter","store","createStore","reducers","composeWithDevTools","AppNavbarList","history","useHistory","useState","location","pathname","currentPage","setCurrentPage","renderTabsItems","label","link","Tab","to","value","component","NavLink","key","Tabs","onChange","event","newValue","setSignInError","connect","Alert","severity","useStyles","makeStyles","theme","spacingTop","marginTop","spacing","onSignIn","foundedUser","getState","find","toLowerCase","dispatch","setIsOpen","setUsername","setPassword","classes","buttonIsDisable","trim","onSubmitHandler","e","preventDefault","Typography","variant","align","gutterBottom","onSubmit","TextField","fullWidth","size","className","target","margin","Button","color","disabled","onClick","paper","position","width","backgroundColor","palette","background","top","left","transform","padding","isOpen","Modal","open","onClose","onSignOut","flexGrow","AppNavBar","AppBar","Toolbar","Post","Date","now","toISOString","substr","this","userId","addPost","setTitle","setDescription","useClasses","buttonAddPost","alignSelf","cardAction","display","flexDirection","actionButton","onAcceptPost","onDeclinePost","CardActions","disableSpacing","card","justifyContent","PostsListItem","Card","CardContent","paragraph","divider","ownProps","notAcceptedPosts","includes","search","hasOwnNotAcceptedPosts","some","renderListItem","length","Divider","acceptedPosts","SearchPost","setSearch","pageWrapper","paddingTop","PagePosts","App","basename","Container","path","exact","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10b6f1dd.chunk.js","sourcesContent":["import { SIGN_IN, SIGN_OUT, SIGN_IN_ERROR } from \"../actions/auth/types\";\r\n\r\nimport { IAuthState } from \"../../models/IAuth\";\r\n\r\nconst INITIAL_STATE: IAuthState = {\r\n  isAuth: false,\r\n  user: {\r\n    id: null,\r\n    username: \"\",\r\n    password: \"\",\r\n    isAdmin: false,\r\n  },\r\n  usersList: [\r\n    {\r\n      id: 1,\r\n      username: \"admin\",\r\n      password: \"admin\",\r\n      isAdmin: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      username: \"user\",\r\n      password: \"user\",\r\n      isAdmin: false,\r\n    },\r\n  ],\r\n  errorSignIn: {\r\n    isShow: false,\r\n    text: \"Неправильный логин или пароль\",\r\n  },\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action: any): IAuthState => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuth: true,\r\n        errorSignIn: { ...state.errorSignIn, isShow: false },\r\n      };\r\n    case SIGN_OUT:\r\n      return { ...state, isAuth: false, user: action.payload };\r\n    case SIGN_IN_ERROR: {\r\n      return {\r\n        ...state,\r\n        errorSignIn: { ...state.errorSignIn, isShow: action.payload },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IPostState } from \"../../models/IPost\";\r\nimport { ACCEPT_POST, ADD_POST, DECLINE_POST } from \"../actions/posts/types\";\r\n\r\nconst INITIAL_STATE: IPostState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      author_id: 1,\r\n      title: \"Lorem, ipsum.\",\r\n      description:\r\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum, aliquid.\",\r\n      date: \"2020-09-23\",\r\n      isAccept: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      author_id: 1,\r\n      title: \"Expedita provident eligendi.\",\r\n      description:\r\n        \"Expedita provident eligendi repellendus corrupti culpa soluta laboriosam sint?\",\r\n      date: \"2020-09-23\",\r\n      isAccept: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      author_id: 2,\r\n      title: \"de Finibus Bonorum et Malorum.\",\r\n      description:\r\n        \"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis\",\r\n      date: \"2020-09-23\",\r\n      isAccept: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case ACCEPT_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((item) => {\r\n          if (item.id === action.payload) {\r\n            return { ...item, isAccept: true };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n    case DECLINE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(item => item.id !== action.payload)\r\n      }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport postsReducer from \"./postsReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  posts: postsReducer\r\n})","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const SIGN_IN_ERROR = \"SIGN_IN_ERROR\";","export const ADD_POST = \"ADD_POST\";\r\nexport const ACCEPT_POST = \"ACCEPT_POST\";\r\nexport const DECLINE_POST = \"DECLINE_POST\";","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = createStore(reducers,composeWithDevTools());","import React, { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface INavItem {\r\n  label: string;\r\n  link: string;\r\n}\r\n\r\nexport const AppNavbarList: React.FC = () => {\r\n  const history = useHistory();\r\n  const [currentPage, setCurrentPage] = useState(history.location.pathname);\r\n\r\n  const navItems: INavItem[] = [\r\n    {\r\n      label: \"Главная\",\r\n      link: \"/\",\r\n    },\r\n    {\r\n      label: \"Новости\",\r\n      link: \"/news\",\r\n    },\r\n  ];\r\n\r\n  const renderTabsItems = navItems.map((item) => {\r\n    return (\r\n      <Tab\r\n        label={item.label}\r\n        to={item.link}\r\n        value={item.link}\r\n        component={NavLink}\r\n        key={item.label}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onChangeHandler = (event: any, newValue: any) => {\r\n    setCurrentPage(newValue);\r\n  };\r\n\r\n  return (\r\n    <Tabs value={currentPage} onChange={onChangeHandler}>\r\n      {renderTabsItems}\r\n    </Tabs>\r\n  );\r\n};\r\n","import { store } from \"../../index\";\r\n\r\nimport { IUser } from \"../../../models/IAuth\";\r\nimport { SIGN_IN, SIGN_OUT, SIGN_IN_ERROR } from \"./types\";\r\n\r\nexport const onSignIn = (username: string, password: string) => {\r\n  const foundedUser = store.getState().auth.usersList.find((user) => {\r\n    return (\r\n      username.toLowerCase() === user.username && password === user.password\r\n    );\r\n  });\r\n\r\n  if (foundedUser) {\r\n    return {\r\n      type: SIGN_IN,\r\n      payload: foundedUser,\r\n    };\r\n  } else {\r\n    store.dispatch(setSignInError(true));\r\n\r\n    return {\r\n      type: \"\",\r\n    };\r\n  }\r\n};\r\n\r\nexport const onSignOut = () => {\r\n  const user: IUser = {\r\n    id: null,\r\n    username: \"\",\r\n    password: \"\",\r\n    isAdmin: false,\r\n  };\r\n\r\n  return {\r\n    type: SIGN_OUT,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const setSignInError = (value: boolean) => {\r\n  return {\r\n    type: SIGN_IN_ERROR,\r\n    payload: value,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IError } from \"../../models/IAuth\";\r\n\r\nconst AppAuthError: React.FC<{ errorSignIn: IError }> = ({ errorSignIn }) => {\r\n  if (!errorSignIn.isShow) {\r\n    return null;\r\n  }\r\n  return <Alert severity=\"error\">{errorSignIn.text}</Alert>;\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    errorSignIn: state.auth.errorSignIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppAuthError);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\n\r\nimport { onSignIn, setSignInError } from \"../../store/actions/auth/auth\";\r\nimport AppAuthError from \"./app-auth-errror\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacingTop: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AuthBody: React.FC<{\r\n  setIsOpen(value: boolean): void;\r\n  onSignIn(username: string, password: string): void;\r\n  setSignInError(value: boolean): void;\r\n}> = ({ setIsOpen, onSignIn, setSignInError }) => {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const buttonIsDisable = !username.trim() || !password.trim();\r\n\r\n  const onSubmitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (username && password) {\r\n      onSignIn(username, password);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n    setSignInError(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n        Вход в систему\r\n      </Typography>\r\n      <AppAuthError />\r\n      <form onSubmit={(e) => onSubmitHandler(e)}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Логин\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={username}\r\n          className={classes.spacingTop}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          label=\"Пароль\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          disabled={buttonIsDisable}\r\n          onClick={onSubmitHandler}\r\n        >\r\n          Вход\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          className={classes.spacingTop}\r\n          color=\"secondary\"\r\n          onClick={() => closeModal()}\r\n        >\r\n          Отмена\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { onSignIn, setSignInError })(AuthBody);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, makeStyles } from \"@material-ui/core\";\r\n\r\nimport AuthBody from \"./app-auth-body\";\r\nimport { setSignInError } from \"../../store/actions/auth/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%,-50%)`,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst AuthSignIn: React.FC<{ setSignInError(value: false): void }> = ({ setSignInError }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n    setSignInError(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"inherit\" onClick={() => setIsOpen(true)}>\r\n        Войти\r\n      </Button>\r\n      <Modal open={isOpen} onClose={() => closeModal()}>\r\n        <div className={classes.paper}>\r\n          <AuthBody setIsOpen={setIsOpen} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { setSignInError })(AuthSignIn);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { onSignOut } from \"../../store/actions/auth/auth\";\r\nimport AuthSignIn from \"./app-auth-signin\";\r\n\r\nconst AppAuth: React.FC<{\r\n  isAuth: boolean;\r\n  onSignOut(): void;\r\n}> = ({ isAuth, onSignOut }) => {\r\n  const renderAuthButton = () => {\r\n    if (isAuth) {\r\n      return (\r\n        <Button color=\"inherit\" onClick={() => onSignOut()}>\r\n          Выйти\r\n        </Button>\r\n      );\r\n    } else {\r\n      return <AuthSignIn />;\r\n    }\r\n  };\r\n\r\n  return <div>{renderAuthButton()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onSignOut })(AppAuth);\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { AppNavbarList } from \"./app-navbar-list\";\r\nimport AppAuth from \"../app-auth/app-auth\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport const AppNavBar: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      <Toolbar variant=\"dense\">\r\n        <Typography className={classes.title}>React news</Typography>\r\n        <AppNavbarList />\r\n        <AppAuth />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","export interface IPost {\r\n  id: number;\r\n  author_id: number;\r\n  title: string;\r\n  description: string;\r\n  date: string;\r\n  isAccept: boolean;\r\n}\r\n\r\nexport interface IPostState {\r\n  posts: IPost[];\r\n}\r\n\r\nexport class Post implements IPost {\r\n  id: number = Date.now();\r\n  author_id: number;\r\n  title: string;\r\n  description: string;\r\n  date: string = new Date().toISOString().substr(0,10);\r\n  isAccept: boolean = false;\r\n\r\n  constructor(author_id: number, title: string, description: string) {\r\n    this.author_id = author_id;\r\n    this.title = title;\r\n    this.description = description;\r\n  }\r\n}","import { TextField, Typography, Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../store/actions/posts/posts\";\r\n\r\nconst AddNewsBody: React.FC<{\r\n  setIsOpen(value: boolean): void;\r\n  addPost(author_id: number, title: string, description: string): void;\r\n  userId: number;\r\n}> = ({ setIsOpen, addPost, userId }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const buttonIsDisable = !title.trim() || !description.trim();\r\n\r\n  const onSubmitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    addPost(userId, title, description);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n        Добавление записи\r\n      </Typography>\r\n      <form>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Заголовок\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          label=\"Описание\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={onSubmitHandler}\r\n          disabled={buttonIsDisable}\r\n        >\r\n          Добавить\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={() => setIsOpen(false)}\r\n        >\r\n          Отмена\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    userId: state.auth.user.id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPost })(AddNewsBody);\r\n","import { Post } from \"../../../models/IPost\";\r\nimport { ACCEPT_POST, ADD_POST, DECLINE_POST } from \"./types\";\r\n\r\nexport const addPost = (author_id: number, title: string, description: string) => {\r\n  const post = new Post(author_id,title,description);\r\n\r\n  return {\r\n    type: ADD_POST,\r\n    payload: post\r\n  }\r\n}\r\n\r\nexport const onAcceptPost = (id: number) => {\r\n  return {\r\n    type: ACCEPT_POST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const onDeclinePost = (id: number) => {\r\n  return {\r\n    type: DECLINE_POST,\r\n    payload: id\r\n  }\r\n}","import { Button, makeStyles, Modal } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddNewsBody from \"./posts-add-news-body\";\r\n\r\nconst useClasses = makeStyles((theme) => ({\r\n  buttonAddPost: {\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%,-50%)`,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ButtonAddNews: React.FC<{ userId: number | null }> = ({ userId }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useClasses();\r\n\r\n  if (!userId) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.buttonAddPost}\r\n        onClick={() => setIsOpen(true)}\r\n      >\r\n        Добавить новость\r\n      </Button>\r\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n        <div className={classes.paper}>\r\n          <AddNewsBody setIsOpen={setIsOpen} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    userId: state.auth.user.id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ButtonAddNews);\r\n","import { Button, CardActions, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onAcceptPost, onDeclinePost } from \"../../store/actions/posts/posts\";\r\n\r\nconst useStyles = makeStyles({\r\n  cardAction: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n  },\r\n  actionButton: {\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nconst ItemActions: React.FC<{\r\n  isAdmin: boolean;\r\n  id: number;\r\n  isAccept: boolean;\r\n  onAcceptPost(id: number): void;\r\n  onDeclinePost(id: number): void;\r\n}> = ({ isAdmin, id, isAccept, onAcceptPost, onDeclinePost }) => {\r\n  const classes = useStyles();\r\n\r\n  const acceptPostHandler = () => {\r\n    onAcceptPost(id);\r\n  };\r\n\r\n  const onDeclineHandler = () => {\r\n    onDeclinePost(id);\r\n  }\r\n\r\n  if (!isAdmin) {\r\n    return null;\r\n  }\r\n\r\n  if (isAdmin && !isAccept) {\r\n    return (\r\n      <CardActions className={classes.cardAction} disableSpacing>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={() => acceptPostHandler()}\r\n        >\r\n          Принять\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          className={classes.actionButton}\r\n          onClick={onDeclineHandler}\r\n        >\r\n          Отклонить\r\n        </Button>\r\n      </CardActions>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    isAdmin: state.auth.user.isAdmin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onAcceptPost, onDeclinePost })(ItemActions);\r\n","import { Card, CardContent, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { IPost } from \"../../models/IPost\";\r\nimport ItemActions from \"./posts-list-item-action\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardAction: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n  },\r\n  actionButton: {\r\n    marginTop: 10,\r\n  },\r\n}));\r\n\r\nconst PostsListItem: React.FC<{\r\n  item: IPost;\r\n}> = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {item.title}\r\n        </Typography>\r\n        <Typography paragraph>{item.description}</Typography>\r\n        <Typography>{item.date}</Typography>\r\n      </CardContent>\r\n      <ItemActions id={item.id} isAccept={item.isAccept} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostsListItem;\r\n","import { Divider, Typography, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IPost } from \"../../models/IPost\";\r\nimport PostsListItem from \"./posts-list-item\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  divider: {\r\n    margin: `${theme.spacing(2)}px 0`,\r\n  },\r\n}));\r\n\r\nconst PostsNotAccepted: React.FC<{\r\n  notAcceptedPosts: IPost[];\r\n  isAdmin: boolean;\r\n  userId: number;\r\n  hasOwnNotAcceptedPosts: boolean;\r\n  search: string;\r\n}> = ({ notAcceptedPosts, isAdmin, userId, hasOwnNotAcceptedPosts, search }) => {\r\n  const classes = useStyles();\r\n\r\n  const renderListItem = notAcceptedPosts.map((item) => {\r\n    if (userId !== item.author_id && !isAdmin) {\r\n      return null;\r\n    }\r\n    return <PostsListItem key={item.id} item={item} />;\r\n  });\r\n\r\n  const renderHeader = () => {\r\n    if (hasOwnNotAcceptedPosts || (isAdmin && notAcceptedPosts.length)) {\r\n      return <Typography variant=\"h4\">Нерасмотренные новости</Typography>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderDivider = () => {\r\n    if (hasOwnNotAcceptedPosts || (isAdmin && notAcceptedPosts.length)) {\r\n      return <Divider className={classes.divider} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (!notAcceptedPosts.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <section>\r\n      {renderHeader()}\r\n      {renderListItem}\r\n      {renderDivider()}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    notAcceptedPosts: state.posts.posts.filter(\r\n      (item: IPost) =>\r\n        !item.isAccept &&\r\n        (item.title.toLowerCase().includes(ownProps.search) ||\r\n          item.description.toLowerCase().includes(ownProps.search) ||\r\n          item.date.includes(ownProps.search))\r\n    ),\r\n    isAdmin: state.auth.user.isAdmin,\r\n    userId: state.auth.user.id,\r\n    hasOwnNotAcceptedPosts: state.posts.posts.some(\r\n      (item: IPost) => item.author_id === state.auth.user.id && !item.isAccept\r\n    ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PostsNotAccepted);\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IPost } from \"../../models/IPost\";\r\n\r\nimport PostsListItem from \"./posts-list-item\";\r\nimport PostsNotAccepted from \"./posts-list-not-accepted\";\r\n\r\nconst PostsList: React.FC<{\r\n  acceptedPosts: IPost[];\r\n  search: string;\r\n}> = ({ acceptedPosts, search }) => {\r\n  const renderAcceptedPosts = () => {\r\n    if (!acceptedPosts.length) {\r\n      return null;\r\n    }\r\n    return acceptedPosts.map((item) => {\r\n      return <PostsListItem key={item.id} item={item} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PostsNotAccepted search={search}/>\r\n      <Typography variant=\"h4\">Новости</Typography>\r\n      {renderAcceptedPosts()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    acceptedPosts: state.posts.posts.filter((item: IPost) => {\r\n      return (\r\n        item.isAccept &&\r\n        (item.title.toLowerCase().includes(ownProps.search) ||\r\n          item.description.toLowerCase().includes(ownProps.search) ||\r\n          item.date.includes(ownProps.search))\r\n      );\r\n    }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PostsList);\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst SearchPost: React.FC<{\r\n  search: string;\r\n  setSearch(value: string): void;\r\n}> = ({ search, setSearch }) => {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"dense\"\r\n      label=\"Поиск\"\r\n      size=\"small\"\r\n      value={search}\r\n      onChange={(e) => setSearch(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchPost;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ButtonAddNews from \"../components/posts-add-news/posts-add-news\";\r\n\r\nimport PostsList from \"../components/posts-list/posts-list\";\r\nimport SearchPost from \"../components/posts-search/posts-search\";\r\n\r\nconst useClasses = makeStyles((theme) => ({\r\n  pageWrapper: {\r\n    paddingTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nconst PagePosts = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const classes = useClasses();\r\n  return (\r\n    <div className={classes.pageWrapper}>\r\n      <ButtonAddNews />\r\n      <SearchPost search={search} setSearch={setSearch} />\r\n      <PostsList search={search.toLowerCase().trim()}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagePosts;\r\n","import { Divider, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useClasses = makeStyles((theme) => ({\r\n  pageWrapper: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst IndexPage: React.FC<{ username: string }> = ({ username }) => {\r\n  const classes = useClasses();\r\n\r\n  return (\r\n    <div className={classes.pageWrapper}>\r\n      <Typography variant=\"h5\" paragraph>\r\n        Привет, <strong>{username}</strong>!\r\n      </Typography>\r\n      <Typography paragraph>\r\n        Для входа в систему используйте пары логин - пароль:\r\n      </Typography>\r\n      <Typography paragraph>user - user</Typography>\r\n      <Typography paragraph>admin - admin</Typography>\r\n      <Divider />\r\n      <Typography paragraph>\r\n        <strong>Гость</strong> может только просматривать одобренные новости.\r\n      </Typography>\r\n      <Typography paragraph>\r\n        <strong>Пользователь</strong> может добавлять новости. Видит только\r\n        одобренные и свои неодобренные новости.\r\n      </Typography>\r\n      <Typography paragraph>\r\n        <strong>Администратор</strong> может одобрить / отклонить новость. Видит\r\n        все новости.\r\n      </Typography>\r\n      <Typography>\r\n        По умолчанию созданная новость не является одобренной.\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    username: state.auth.user.username ? state.auth.user.username : \"Гость\",\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IndexPage);\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { AppNavBar } from \"../app-navbar/app-navbar\";\r\nimport PagePosts from \"../../routes/Posts\";\r\nimport IndexPage from \"../../routes/Index\";\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <BrowserRouter basename=\"/react-typescript-news\">\r\n      <Container>\r\n        <AppNavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <IndexPage />\r\n          </Route>\r\n          <Route path=\"/news\">\r\n            <PagePosts />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./store\";\r\nimport { App } from \"./components/app/App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}